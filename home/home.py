from PyQt5.QtCore import QRect, QMetaObject, QCoreApplication
from PyQt5.QtGui import QIntValidator
from PyQt5.QtWidgets import QMainWindow, QWidget, QVBoxLayout, QTabWidget, QLabel, QSizePolicy, QHBoxLayout, QLineEdit, \
    QPushButton, QGridLayout, QMenuBar

from common.type.custom_ui import BQSizePolicy


class Home(QMainWindow):
    def __init__(self):
        super(Home, self).__init__()
        self.setupUi(self)
        self.show()

    def setupUi(self, window):
        window.resize(600, 236)
        central_widget = QWidget(window)
        vertical_layout = QVBoxLayout(central_widget)
        vertical_layout.setContentsMargins(11, 11, 11, 11)
        vertical_layout.setSpacing(6)
        self.tab_widget = QTabWidget(central_widget)
        self.tab_widget.setTabShape(QTabWidget.Rounded)
        self.first_tab = QWidget()
        self.first_tab_layout = QVBoxLayout(self.first_tab)
        self.first_tab_layout.setContentsMargins(11, 11, 11, 11)
        self.first_tab_layout.setSpacing(6)
        self.select_trained_label = QLabel(self.first_tab)
        self.select_trained_label.setSizePolicy(BQSizePolicy(v_stretch=1))
        self.first_tab_layout.addWidget(self.select_trained_label)
        self.widget = QWidget(self.first_tab)
        self.widget.setSizePolicy(BQSizePolicy(v_stretch=2))
        self.select_file_layout = QHBoxLayout(self.widget)
        self.select_file_layout.setContentsMargins(0, 0, 0, 0)
        self.select_file_layout.setSpacing(6)
        self.lineEdit = QLineEdit(self.widget)
        self.select_file_layout.addWidget(self.lineEdit)
        self.select_trained_file = QPushButton(self.widget)
        self.select_trained_file.setObjectName("selectTrainedFile")
        self.select_file_layout.addWidget(self.select_trained_file)
        self.first_tab_layout.addWidget(self.widget)
        first_tab_widget = QWidget(self.first_tab)
        first_tab_widget.setSizePolicy(BQSizePolicy(v_stretch=1))
        first_tab_bot_layout = QHBoxLayout(first_tab_widget)
        first_tab_bot_layout.setContentsMargins(0, 0, 0, 0)
        first_tab_bot_layout.setSpacing(6)
        hidden_widget = QWidget(first_tab_widget)
        hidden_widget.setSizePolicy(BQSizePolicy(h_stretch=2))
        first_tab_bot_layout.addWidget(hidden_widget)
        self.process_selected_file = QPushButton(first_tab_widget)
        self.process_selected_file.setSizePolicy(BQSizePolicy(QSizePolicy.Minimum, QSizePolicy.Fixed, h_stretch=1))
        self.process_selected_file.setObjectName("processSelectedFile")
        first_tab_bot_layout.addWidget(self.process_selected_file)
        self.first_tab_layout.addWidget(first_tab_widget)
        self.tab_widget.addTab(self.first_tab, "")
        self.second_tab = QWidget()
        self.second_tab_layout = QVBoxLayout(self.second_tab)
        self.second_tab_layout.setContentsMargins(11, 11, 11, 11)
        self.second_tab_layout.setSpacing(6)
        self.second_tab_main_widget = QWidget(self.second_tab)
        self.second_tab_main_widget.setSizePolicy(BQSizePolicy(v_stretch=10))
        grid_layout = QGridLayout(self.second_tab_main_widget)
        grid_layout.setContentsMargins(0, 0, 0, 0)
        grid_layout.setSpacing(6)
        self.n_epochs = QLineEdit(self.second_tab_main_widget)
        self.n_epochs.setValidator(QIntValidator(0, 10000, self))
        grid_layout.addWidget(self.n_epochs, 0, 1, 1, 1)
        self.label_3 = QLabel(self.second_tab_main_widget)
        grid_layout.addWidget(self.label_3, 1, 0, 1, 1)
        self.label_2 = QLabel(self.second_tab_main_widget)
        grid_layout.addWidget(self.label_2, 0, 0, 1, 1)
        self.label_4 = QLabel(self.second_tab_main_widget)
        grid_layout.addWidget(self.label_4, 2, 0, 1, 1)
        self.lineEdit_3 = QLineEdit(self.second_tab_main_widget)
        grid_layout.addWidget(self.lineEdit_3, 1, 1, 1, 1)
        self.lineEdit_4 = QLineEdit(self.second_tab_main_widget)
        grid_layout.addWidget(self.lineEdit_4, 2, 1, 1, 1)
        self.find_dataset = QPushButton(self.second_tab_main_widget)
        self.find_dataset.setObjectName("findDataset")
        grid_layout.addWidget(self.find_dataset, 1, 2, 1, 1)
        self.select_checkpoint_dir = QPushButton(self.second_tab_main_widget)
        self.select_checkpoint_dir.setObjectName("pushButton_3")
        grid_layout.addWidget(self.select_checkpoint_dir, 2, 2, 1, 1)
        self.second_tab_layout.addWidget(self.second_tab_main_widget)
        self.widget_4 = QWidget(self.second_tab)
        second_tab_bot_layout = QHBoxLayout(self.widget_4)
        second_tab_bot_layout.setContentsMargins(0, 0, 0, 0)
        second_tab_bot_layout.setSpacing(6)
        self.widget_6 = QWidget(self.widget_4)
        self.widget_6.setSizePolicy(BQSizePolicy(h_stretch=2))
        second_tab_bot_layout.addWidget(self.widget_6)
        self.start_training = QPushButton(self.widget_4)
        self.start_training.setSizePolicy(BQSizePolicy(QSizePolicy.Minimum, QSizePolicy.Fixed, h_stretch=1))
        self.start_training.setObjectName("pushButton_4")
        second_tab_bot_layout.addWidget(self.start_training)
        self.second_tab_layout.addWidget(self.widget_4)
        self.tab_widget.addTab(self.second_tab, "")
        vertical_layout.addWidget(self.tab_widget)
        window.setCentralWidget(central_widget)
        self.menuBar = QMenuBar(window)
        self.menuBar.setGeometry(QRect(0, 0, 600, 22))
        self.menuBar.setObjectName("menuBar")
        window.setMenuBar(self.menuBar)

        self.retranslateUi(window)
        self.tab_widget.setCurrentIndex(1)
        QMetaObject.connectSlotsByName(window)

    def retranslateUi(self, window):
        _translate = QCoreApplication.translate
        window.setWindowTitle(_translate("MainWindow", "Face Expression"))
        self.select_trained_label.setText(_translate("MainWindow", "Please select the location of the trained model (*.hdf5)"))
        self.select_trained_file.setText(_translate("MainWindow", "..."))
        self.process_selected_file.setText(_translate("MainWindow", "Load selected model"))
        self.tab_widget.setTabText(self.tab_widget.indexOf(self.first_tab), _translate("MainWindow", "Load a trained model"))
        self.label_3.setText(_translate("MainWindow", "Fer2013's dataset: "))
        self.find_dataset.setText(_translate("MainWindow", "..."))
        self.label_2.setText(_translate("MainWindow", "Number epochs:"))
        self.label_4.setText(_translate("MainWindow", "Checkpoint dir:"))
        self.select_checkpoint_dir.setText(_translate("MainWindow", "..."))
        self.start_training.setText(_translate("MainWindow", "Start"))
        self.tab_widget.setTabText(self.tab_widget.indexOf(self.second_tab), _translate("MainWindow", "Train a new model"))